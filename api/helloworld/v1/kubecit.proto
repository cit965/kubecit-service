syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";


option go_package = "kubecit-service/api/helloworld/v1;v1";

// The greeting service definition.
service Kubecit {
  // ========================== 分类相关接口 ===================================

  rpc ListCategory (ListCategoryReq) returns (ListCategoryResp) {
    option (google.api.http) = {
      get: "/api/categories"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "分类列表"
      tags: "catetory"
    };
  }

  rpc ListCategoryV2 (Empty) returns (ListCategoryResp) {
    option (google.api.http) = {
      get: "/api/categories/v2"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "分类列表v2"
      tags: "catetory"
    };
  }

  rpc CreateCategory (CategoryInfo) returns (Empty) {
    option (google.api.http) = {
      post: "/api/categories"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建分类"
      tags: "catetory"
    };
  }

  rpc DeleteCategory (DeleteCategoryReq) returns (Empty) {
    option (google.api.http) = {
      delete: "/api/categories"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "删除分类"
      tags: "catetory"
    };
  }

  rpc UpdateCategory (UpdateCategoryReq) returns (Empty) {
    option (google.api.http) = {
      put: "/api/categories"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "更新分类"
      tags: "catetory"
    };
  }


  // ========================== 课程相关接口 ===================================
  rpc MostNew (Empty) returns (MostNewReply) {
    option (google.api.http) = {
      post: "/api/course/mostNew",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "获取最新课程列表"
      tags: "course"
    };
  }


  rpc SearchCourse (SearchCourseRequest) returns (CourseSearchReply) {
    option (google.api.http) = {
      post: "/api/course/search",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "筛选课程列表"
      tags: "course"
    };
  }
  rpc UpdateCourse (UpdateCourseRequest) returns (UpdateCourseReply) {
    option (google.api.http) = {
      put: "/api/course/{id}",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "更新课程信息"
      tags: "course"
    };
  }
  rpc ReviewCourse (ReviewCourseRequest) returns (ReviewCourseReply) {
    option (google.api.http) = {
      patch: "/api/course/{id}",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "审核课程"
      tags: "course"
    };
  }
  rpc CreateCourse (CreateCourseRequest) returns (CreateCourseReply) {
    option (google.api.http) = {
      post: "/api/course",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建课程"
      tags: "course"
    };
  }
  rpc GetCourse (GetCourseRequest) returns (GetCourseReply) {
    option (google.api.http) = {
      get: "/api/course/{id}",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "获取课程信息"
      tags: "course"
    };
  }
  rpc DeleteCourse (DeleteCourseRequest) returns (DeleteCourseReply) {
    option (google.api.http) = {
      delete: "/api/course/{id}",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "删除课程"
      tags: "course"
    };
  }
  rpc CreateChapter (CreateChapterRequest) returns (CreateChapterReply) {
    option (google.api.http) = {
      post: "/api/course/chapter",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建章节"
      tags: "course"
    };
  }
  rpc DeleteChapter (DeleteChapterRequest) returns (DeleteChapterReply) {
    option (google.api.http) = {
      delete: "/api/course/chapter/{id}",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "删除章节"
      tags: "course"
    };
  }

  rpc UpdateChapter (UpdateChapterRequest) returns (UpdateChapterReply) {
    option (google.api.http) = {
      put: "/api/course/chapter/{id}",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "更新章节"
      tags: "course"
    };
  }
  rpc CreateLesson (CreateLessonRequest) returns (CreateLessonReply) {
    option (google.api.http) = {
      post: "/api/course/lesson",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建小节"
      tags: "course"
    };
  }
  rpc ListLessons (ListChapterLessonsWithCourIdRequest) returns (ListChapterLessonsWithCourIdReply) {
    option (google.api.http) = {
      get: "/api/course/{courseId}/lessons",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "获取课程下所有小节"
      tags: "course"
    };
  }
  rpc UpdateLesson (UpdateLessonRequest) returns (UpdateLessonReply) {
    option (google.api.http) = {
      put: "/api/course/lesson/{lessonId}",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "更新小节"
      tags: "course"
    };
  }
  rpc DeleteLesson (DeleteLessonRequest) returns (DeleteLessonReply) {
    option (google.api.http) = {
      delete: "/api/course/lesson/{lessonId}",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "删除小节"
      tags: "course"
    };
  }

  // ========================== 用户相关接口 ===================================
  rpc GetInfo (GetInfoRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      get: "/api/member/getInfo",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "用户信息"
      tags: "user"
    };
  }

  rpc LoginByJson (LoginByJsonRequest) returns (LoginByJsonReply) {
    option (google.api.http) = {
      post: "/api/u/loginByJson",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "用户登录"
      tags: "user"
    };
  }

  rpc RegisterUsername (RegisterUsernameRequest) returns (RegisterUsernameReply) {
    option (google.api.http) = {
      post: "/api/u/registerUsername",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "用户账号密码注册"
      tags: "user"
    };
  }


  // ========================== 系统设置相关接口 ===================================
  rpc CreateSlider (CreateSliderRequest) returns (CreateSliderReply) {
    option (google.api.http) = {
      post: "/api/slider",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "首页轮播图创建"
      tags: "system"
    };
  }

  rpc GetSlider (GetSliderRequest) returns (GetSliderReply) {
    option (google.api.http) = {
      get: "/api/slider/{id}",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "首页轮播图获取单个"
      tags: "system"
    };
  }

  rpc DeleteSlider (DeleteSliderRequest) returns (DeleteSliderReply) {
    option (google.api.http) = {
      delete: "/api/slider/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "首页轮播图删除"
      tags: "system"
    };
  }

  rpc UpdateSlider (UpdateSliderRequest) returns (UpdateSliderReply) {
    option (google.api.http) = {
      put: "/api/slider/{id}",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "首页轮播图更新"
      tags: "system"
    };
  }

  rpc ListSlidersByPriority (Empty) returns (ListSlidersByPriorityReply) {
    option (google.api.http) = {
      get: "/api/sliders",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "首页轮播图展示"
      tags: "system"
    };
  }

  rpc SystemSettings (Empty) returns (SystemSettingsReply) {
    option (google.api.http) = {
      get: "/api/systemsettings",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "系统设置"
      tags: "system"
    };
  }

  // ========================== 订单相关接口 ===================================
  rpc CreateOrder (CreateOrderRequest) returns (CreateOrderReply) {
    option (google.api.http) = {
      post: "/api/order",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建订单,传参课程[id]"
      tags: "order"
    };
  }

  rpc MyOrderList (MyOrderRequest) returns (OrderListReply) {
    option (google.api.http) = {
      get: "/api/myOrder",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "我的订单"
      tags: "order"
    };
  }

  rpc OrderPay (OrderPayRequest) returns (CreateOrderReply) {
    option (google.api.http) = {
      get: "/api/orderPay",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "支付订单"
      tags: "order"
    };
  }
  //=============================讲师相关================================================
  rpc ListAllTeacher (ListAllTeacherRequest) returns (ListAllTeacherReply) {
    option (google.api.http) = {
      get: "/api/teachers",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "分页查询讲师"
      tags: "teacher"
    };
  }
  rpc GetTeacher (GetTeacherRequest) returns (TeacherInfo) {
    option (google.api.http) = {
      get: "/api/teacher/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "讲师详情"
      tags: "teacher"
    };
  }
  rpc CreateTeacher (CreateTeacherRequest) returns (TeacherInfo) {
    option (google.api.http) = {
      post: "/api/teacher",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "创建讲师"
      tags: "teacher"
    };
  }

  rpc ListRecommendedLecturer(Empty) returns (ListRecommendedLecturerReply) {
    option (google.api.http) = {
      get: "/api/recommendedLecturer",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "推荐讲师"
      tags: "teacher"
    };
  }


  //=============================用户钱包相关接口=================================================
  rpc RechargeWallet (RechargeWalletRequest) returns (WalletInfo)  {
    option (google.api.http) = {
      post: "/api/wallet/recharge",
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "为用户充值金叶子. 充值的金叶子数*100:gold_leaf_amount, 充值的银叶子数*100:gold_leaf_amount,用户ID:user_id"
      tags: "wallet"
    };
  }
  rpc WalletBalance (Empty) returns (WalletInfo)  {
    option (google.api.http) = {
      get: "/api/wallet/balance",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "用户钱包余额"
      tags: "wallet"
    };
  }
  //=============================视频播放相关接口=================================================
  rpc VideoPlayerGetPlayerParam (VideoPlayerGetParamReq) returns (VideoPlayerGetParamReply)  {
    option (google.api.http) = {
      get: "/api/video/player/get_player_param",
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "获取播放参数"
      tags: "video"
    };
  }


}
message CreateTeacherRequest {
  string detail = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "讲师详情",
    description: "讲师详情"
  }, (google.api.field_behavior) = REQUIRED];
  string curriculum_vitae = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "履历",
    description: "履历"
  }, (google.api.field_behavior) = REQUIRED];
  string works = 3[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "作品",
    description: "作品"
  }, (google.api.field_behavior) = REQUIRED];
  string skills = 4[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "技能点",
    description: "技能点"
  }, (google.api.field_behavior) = REQUIRED];
  string avator = 5[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "头像",
    description: "头像"
  }, (google.api.field_behavior) = REQUIRED];
  string name = 6[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "姓名",
    description: "姓名"
  }, (google.api.field_behavior) = REQUIRED];
  TeacherLevel level = 17[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "等级",
    description: "ENTRY = 1; // 入门 PRIMARY = 2; //初级 INTERMEDIATE = 3; //中级 SENIOR = 4;//高级 MASTER = 5;//大师"
  }, (google.api.field_behavior) = REQUIRED];
}

message ListAllTeacherRequest {
  optional int32 pageNum = 1;
  optional int32 pageSize = 2;
}

message GetTeacherRequest {
  int32 id = 1;
}
message ListAllTeacherReply {
  repeated TeacherInfo teachers = 1;
}

enum TeacherLevel {
  TEACHER_LEVEL_UNKNOWN = 0;
  TEACHER_ENTRY = 1; // 入门
  TEACHER_PRIMARY = 2; //初级
  TEACHER_INTERMEDIATE = 3; //中级
  TEACHER_SENIOR = 4;//高级
  TEACHER_MASTER = 5;//大师
}


message TeacherInfo {
  string detail = 1 ; // 讲师详情
  string curriculum_vitae = 2; // 履历描述
  string works = 3; // 以往作品
  string skills = 4; // 技能点
  string avator = 5; // 头像
  google.protobuf.Timestamp create_at = 6; // 创建时间
  google.protobuf.Timestamp update_at = 7; // 更新时间
  int32 id = 8;
  string name = 9;
  TeacherLevel level = 10;

}


message RecommendedLecturer {
  int32 id = 1;
  string name = 2;
  string avatar = 3;
  string level = 4;
  string title = 5;
  string brief = 6;
  Achievement achievement = 7;
}

message Achievement {
  int32 students = 1;
  int32 fans = 2;
  int32 classHours = 3;
  int32 praises = 4;
}

message ListRecommendedLecturerReply{
  repeated RecommendedLecturer recommendedLecturers = 1;
}
message RechargeWalletRequest{
  int32 gold_leaf_amount = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "充值的金叶子数",
    description: "充值的金叶子数"
  }];
  int32 silver_leaf_amount = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "充值的银叶子数",
    description: "充值的银叶子数"
  }];
  int32 user_id = 3[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "用户ID",
    description: "用户ID"
  }, (google.api.field_behavior) = REQUIRED];
}
message WalletInfo {
  optional int32 id = 1;
  optional int32 gold_leaf = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "金叶子",
    description: "金叶子"
  }];
  optional int32 silver_leaf = 3[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "银叶子",
    description: "银叶子"
  }];
  optional int32 frozen_gold_leaf = 4[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "冻结的金叶子",
    description: "冻结的金叶子"
  }];
  optional int32 frozen_silver_leaf = 5[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "冻结的银叶子",
    description: "冻结的银叶子"
  }];
  optional int32 user_id = 6[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "用户ID",
    description: "用户ID"
  }];

  google.protobuf.Timestamp createdAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

message Empty {

}


message ListCategoryReq {
  optional int32 level = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "分类级别",
    description: "1级分类：1；2级分类：2"
  }];
  optional int32 parentID = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "上级分类",
    description: "列出1级分类写2级分类"
  }];
}

message ListCategoryResp{
  repeated CategoryInfo categories = 1;
}


message CategoryInfo {
  string categoryName = 1;
  int32 parentId = 3;
  int32 level = 4;
  int32 id = 5;
  repeated CategoryInfo children = 6;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}


message Metadata {
  string msg = 1;
  string code = 2;
  bool success = 3;
  string version = 4;
  string timestamp = 5;
}

message MostNewReply {
  repeated CourseInfo list = 1;
  int32 total = 2;
}

message MostNewReplyData {
  repeated CourseInfo list = 1;
}

message CourseSearchReply {
  repeated CourseInfo list = 1;
  int32 total = 2;
}

message CourseInfo {
  int32 id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "课程id"
    }
  ];
  CourseLevel level = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程级别",
      description: "课程级别 1 入门，2初级，3中级 4高级 5大师"
    }
  ];
  string name = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程名称",
      description: "课程名称"
    }
  ];
  string detail = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程描述",
      description: "课程描述"
    }
  ];
  string cover = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程封面",
      description: "课程封面"
    }
  ];
  int32 price = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程价格",
      description: "课程价格,单位分"
    }
  ];
  repeated string tags = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程标签",
      description: "课程标签"
    }
  ];
  CourseStatus status = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程状态",
      description: "NOT_REVIEWED = 1; // 未审核 REVIEWED = 2; // 已审核 SHELVED = 3; // 已上架 OFF_SHELVED = 4; // 已下架"
    }
  ];
  int32 categoryId = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "分类ID",
      description: "分类ID"
    }
  ];
  google.protobuf.Timestamp createdAt = 10;
  google.protobuf.Timestamp updatedAt = 11;
  int32 people = 12[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "人数",
      description: "人数"
    }
  ];
  int32 duration = 13[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程时长",
      description: "课程时长"
    }
  ];
  int32 score = 14[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程评分",
      description: "课程评分"
    }
  ];
  int32 teacher_id = 15[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师id",
      description: "讲师id"
    }
  ];
  string teacher_avatar = 16[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师头像",
      description: "讲师头像"
    }
  ];
  int32 teacher_level = 17[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师等级",
      description: "讲师等级"
    }
  ];
  string teacher_name = 18[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师名称",
      description: "讲师名称"
    }
  ];
}





message SearchCourseRequest {
  optional int32 pageNum = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "当前页码",
      description: "当前页码，不传默认值1"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 pageSize = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "每页数据",
      description: "不传默认值20"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 firstCategory = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "一级分类id",
      description: "一级分类id，筛选某个一级分类下所有二级分类的课程"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 secondCategory = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "二级分类id",
      description: "二级分类id，筛选某个二级分类下课程"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  CourseLevel level = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程难度",
      description: "LEVEL_UNKNOWN = 0; //BEGINNER = 1; // 入门 ELEMENTARY = 2; // 初级 INTERMEDIATE = 3; // 中级 ADVANCED = 4; // 高级 MASTER = 5; // 大师"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 order = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "排序规则",
      description: "1 标识按照最新排序 2表示按照综合排序，还没实现"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional string name = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "搜索",
      description: "按照名称模糊搜索"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 teacherId = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师ID",
      description: "按照讲师ID搜索"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

message UpdateCourseRequest {
  int32 id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程ID",
      description: "课程ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  CourseLevel level = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程难度",
      description: "具体参考 course/search 接口注释"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string name = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程名称",
      description: "课程名称"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string detail = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程描述",
      description: "课程描述"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string cover = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程封面",
      description: "课程封面"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 price = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程价格",
      description: "课程价格 单位分"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  repeated string tags = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程标签",
      description: "课程标签"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 categoryId = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程分类ID",
      description: "课程分类ID，只能挂载二级分类下"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 teacherId = 10[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师id",
      description: "讲师id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message UpdateCourseReply {
  CourseInfo data = 1;
}

message ReviewCourseRequest {
  int32 id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "需要审核的课程id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  CourseStatus status = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程状态",
      description: "NOT_REVIEWED = 1; // 未审核 REVIEWED = 2; // 已审核 SHELVED = 3; // 已上架 OFF_SHELVED = 4; // 已下架"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message ReviewCourseReply {
  CourseInfo data = 1;
}

message CreateCourseRequest {
  CourseLevel level = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程等级",
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string name = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程名称",
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string detail = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程详情",
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string cover = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程封面",
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 price = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程价格",
    },
    (google.api.field_behavior) = REQUIRED
  ];
  repeated string tags = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程标签",
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int32 categoryId = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "分类Id",
      description: "分类Id,只能是二级Id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 teacherId = 10[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "讲师Id",
      description: "讲师Id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateCourseReply {
  CourseInfo data = 1;
}

message ListCoursesRequest {

}

message ListCoursesReply {
  repeated CourseInfo data = 1;
}

message GetCourseRequest {
  int32 id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "课程id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message GetCourseReply {
  CourseInfo data = 1;
}

message DeleteCourseRequest {
  int32 id = 1;
}

message DeleteCourseReply {
  int32 count = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "课程id"
    }
  ];
}

message ChapterInfo {
  int32 id = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节ID",
      description: "章节ID"
    }
  ];
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节名称",
      description: "章节名称"
    }
  ];
  google.protobuf.Timestamp releasedTime = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "发布时间",
      description: "发布时间"
    }
  ];
  string description = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节描述",
      description: "章节描述"
    }
  ];
  int32 sort = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节排序",
      description: "章节排序"
    }
  ];

  int32 courseId = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "课程id"
    }
  ];
}

message CreateChapterRequest {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节id",
      description: "章节id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string description = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节描述",
      description: "章节描述"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 sort = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "排序序号",
      description: "排序序号"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  FreePreview hasFreePreview = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "是否有免费预览小节",
      description: "TRUE 有 FALSE 没有"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 courseId = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程id",
      description: "课程id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message CreateChapterReply {
  ChapterInfo data = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节id",
      description: "章节id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message DeleteChapterRequest {
  int32 id = 1;
}
message DeleteChapterReply {
  int32 count = 1;
}
message UpdateChapterRequest {
  int32 id = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节id",
      description: "章节id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节名称",
      description: "章节名称"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string description = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节描述",
      description: "章节描述"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  optional int32 sort = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节排序",
      description: "章节排序"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  FreePreview hasFreePreview = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "是否有免费预览小节",
      description: "1 有 2 没有"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  optional int32 courseId = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程ID",
      description: "课程ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message UpdateChapterReply {
  ChapterInfo data = 1;
}


message CreateLessonRequest {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节ID",
      description: "小节ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  optional int32 sort = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节排序",
      description: "小节排序"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  LessonType type = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节类型",
      description: " VIDEO 视频 AUDIO 音频"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string storagePath = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节文件地址",
      description: "小节文件地址"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string source = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节来源",
      description: "小节来源,可以不填，视频来自 bilibili/self/youtube"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string courseware = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课件地址",
      description: "课件地址"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  FreePreview  isFreePreview = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "是否为免费预览",
      description: "TRUE 是 FALSE 不是"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  optional int32 chapterId = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节ID",
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateLessonReply {
  LessonInfo data = 1;
}

message ListChapterLessonsWithCourIdRequest {
  int32 courseId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课程ID",
      description: "课程ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message ListChapterLessonsWithCourIdReply {
  repeated ChapterLessonsInfo data = 1;
}

message ChapterLessonsInfo {
  ChapterInfo chapter = 1;
  repeated LessonInfo lessons = 2;
}

message UpdateLessonRequest {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节名称",
      description: "小节名称"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  optional int32 sort = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节排序",
      description: "小节排序"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  LessonType type = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节类型",
      description: "小节类型"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string storagePath = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节文件地址",
      description: "小节文件地址"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string source = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节来源",
      description: "小节来源"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string courseware = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课件地址",
      description: "课件地址"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  FreePreview isFreePreview = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "是否免费预览",
      description: "1 是 2 否"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  optional int32 chapterId = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节ID",
      description: "章节ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int32 lessonId = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节ID",
      description: "小节ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message UpdateLessonReply {
  LessonInfo data = 1;
}

message DeleteLessonRequest {
  int32 lessonId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节ID",
      description: "小节ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message DeleteLessonReply {
  int32 count = 1;
}

message LessonInfo {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节名称",
      description: "小节名称"
    }];
  int32 sort = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节排序",
      description: "小节排序"
    }];
  LessonType type = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节类型",
      description: "1 视频 2 音频"
    }];
  string storagePath = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节文件路径",
      description: "小节文件路径"
    }];
  string source = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节来源",
      description: "小节来源"
    }];
  string courseware = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "课件地址",
      description: "课件地址"
    }];
  FreePreview isFreePreview = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "是否免费预览",
      description: "1 是 2 否"
    }];
  int32 chapterId = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "章节ID",
      description: "章节ID"
    }];
  int32 id = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节ID",
      description: "小节ID"
    }];
  google.protobuf.Timestamp releasedTime = 10[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "发布时间",
      description: "发布时间"
    }];
}

enum CourseStatus {
  STATUS_UNKNOWN = 0;
  NOT_REVIEWED = 1; // 未审核
  REVIEWED = 2; // 已审核
  SHELVED = 3; // 已上架
  OFF_SHELVED = 4; // 已下架
}

enum CourseLevel {
  LEVEL_UNKNOWN = 0; //
  BEGINNER = 1; // 入门
  ELEMENTARY = 2; // 初级
  INTERMEDIATE = 3; // 中级
  ADVANCED = 4; // 高级
  MASTER = 5; // 大师
}

enum LessonType {
  LessonType_UNKNOWN = 0;
  VIDEO = 1; // 视频
  AUDIO = 2; // 音频
}

enum  FreePreview {
  FreePreview_UNKNOWN = 0;
  TRUE = 1; // 是
  FALSE = 2; // 否
}

message SliderInfo {
  int32 id = 1;
  string title = 2;
  string content = 3;
  string imageLink = 4;
  google.protobuf.Timestamp createAt = 5;
  google.protobuf.Timestamp updateAt = 6;
  bool isValid = 7;
  int32 priority = 8;
}

message CreateSliderRequest {
  string title = 1;
  string content = 2;
  string imageLink = 3;
  bool isValid = 4;
  int32 priority = 5;
}

message CreateSliderReply {
  SliderInfo data = 2;
}

message GetSliderRequest {
  int32 id = 1;
}

message GetSliderReply {
  SliderInfo data = 2;
}

message DeleteSliderRequest {
  int32 id = 1;
}

message DeleteSliderReply {
  int32 count = 2;
}

message UpdateSliderRequest {
  int32 id = 1;
  string title = 2;
  string content = 3;
  string imageLink = 4;
  bool isValid = 5;
  int32 priority = 6;
}

message UpdateSliderReply {
  SliderInfo data = 2;
}

message ListSlidersByPriorityRequest {
  int32 priority = 1;
  int32 count = 2;
}

message ListSlidersByPriorityReply {
  repeated SliderInfo data = 1;
}


message GetInfoRequest {}
message UserInfoReply{
  string username = 1;
  uint32 role_id = 2;
  string channel = 3;
}




message LoginByJsonRequest {
  string username = 1;
  string password = 2;
}

message LoginByJsonReply {
  Metadata meta = 1;
  LoginByJsonReplyData data = 2;
}

message RegisterUsernameRequest {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z0-9]+$"];
  string password = 2 [(validate.rules).string.min_len = 6];
}


message RegisterUsernameReply {
  Metadata meta = 1;
  LoginByJsonReplyData data = 2;
}


message LoginByJsonReplyData {
  string accessToken = 1;
}

message DeleteCategoryReq {
  int32 id = 1;
}

message UpdateCategoryReq {
  string categoryName = 1;
  int32 id = 2;
}

message SystemSettingsReply {
  string logourl = 1;
  string wechaturl = 2;
  string computerurl = 3;
}


message CreateOrderRequest {
  repeated int32 courseIds = 1;
}

message OrderDetail{
  int32 orderId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "订单id",
      description: "订单id"
    }];
  int32 productId = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "商品id",
      description: "商品id"
    }];
  string productName = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "商品名称",
      description: "商品名称"
    }];
  int32 productPrice = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "商品价格 (单位:分)",
      description: "商品价格 (单位:分)"
    }];
  string productDescription = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "商品描述",
      description: "商品描述"
    }];
}


// 支付类型
enum PayType {
  PAY_TYPE_UNKNOWN = 0;
  NO_PAY = 1 ; // 还未支付
  ALIPAY = 2; // 支付宝
  WECHAT = 3; // 微信支付
  GOLDEN_LEAF = 4;  // 金叶子
  SILVER_LEAF = 5;  //银叶子
}

//支付状态
enum PayStatus {
  PAY_STATUS_UNKNOWN = 0;
  UNPAID = 1; // 未支付
  PAID = 2; // 已支付
  FAILED = 3; //支付失败
  CLOSED = 4; //关闭
  CANCELED = 5; //取消
  REFUNDING = 6; //退款中
  REFUNDED = 7; //退款成功
  REFUND_FAILED = 8;//退款失败
}


message CreateOrderReply {
  int32 userId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "用户id",
      description: "用户id"
    }];
  string orderSn = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "系统内订单号",
      description: "系统内订单号"
    }];
  PayType payType = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "支付方式",
      description: "NO_PAY = 1 ; // 还未支付 ALIPAY = 2; // 支付宝 WECHAT = 3; // 微信支付 GOLDEN_LEAF = 4;  // 金叶子 SILVER_LEAF = 5;  //银叶子"
    }];
  PayStatus payStatus = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "支付状态",
      description: "  UNPAID = 1; // 未支付 PAID = 2; // 已支付 FAILED = 3; //支付失败 CLOSED = 4; //关闭 CANCELED = 5; //取消 REFUNDING = 6; //退款中 REFUNDED = 7; //退款成功 REFUND_FAILED = 8;//退款失败"
    }];
  int32 tradePrice = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "订单价格 单位分",
      description: "订单价格"
    }];
  string tradeNo = 6 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "支付宝  微信 交易订单号",
      description: "支付宝  微信 交易订单号"
    }];
  google.protobuf.Timestamp payTime = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "支付时间",
      description: "支付时间"
    }];
  google.protobuf.Timestamp createTime = 8;
  google.protobuf.Timestamp updateTime = 9;
  repeated OrderDetail details = 10;
}


message VideoPlayerGetParamReq {

  int32 lessonId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "小节ID",
      description: "小节ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
message VideoPlayerGetParamReply {
  uint64 appid = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "APPID",
      description: "腾讯云点播APPID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string fieldID = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "视频ID",
      description: "腾讯云点播服务的视频ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string pSign = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "播放签名",
      description: "腾讯云点播的播放签名"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message OrderListReply {
  repeated CreateOrderReply orderList = 1;
}
message MyOrderRequest {
  optional int32 pageNum = 1;
  optional int32 pageSize = 2;
}

message OrderPayRequest {
  int32 orderId = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "订单id",
      description: "订单id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  PayType payType = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "支付方式",
      description: "NO_PAY = 1 ; // 还未支付 ALIPAY = 2; // 支付宝 WECHAT = 3; // 微信支付 GOLDEN_LEAF = 4;  // 金叶子 SILVER_LEAF = 5;  //银叶子"
    }, (google.api.field_behavior) = REQUIRED];
}
